{"id":"../node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","dependencies":[{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js.map","includedInParent":true,"mtime":1536032206000},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/package.json","includedInParent":true,"mtime":1602365273866},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/.babelrc","includedInParent":true,"mtime":1602365273866},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/package.json","includedInParent":true,"mtime":1602365360568},{"name":"react","loc":{"line":11,"column":21},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react/react.js"},{"name":"prop-types","loc":{"line":15,"column":25},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/prop-types/index.js"},{"name":"../GenericChartComponent","loc":{"line":19,"column":37},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/GenericChartComponent.js"},{"name":"../GenericComponent","loc":{"line":23,"column":32},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/GenericComponent.js"},{"name":"../utils","loc":{"line":25,"column":21},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/series/PointAndFigureSeries.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/utils/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar PointAndFigureSeries = function (_Component) {\n\t_inherits(PointAndFigureSeries, _Component);\n\n\tfunction PointAndFigureSeries(props) {\n\t\t_classCallCheck(this, PointAndFigureSeries);\n\n\t\tvar _this = _possibleConstructorReturn(this, (PointAndFigureSeries.__proto__ || Object.getPrototypeOf(PointAndFigureSeries)).call(this, props));\n\n\t\t_this.renderSVG = _this.renderSVG.bind(_this);\n\t\t_this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n\t\treturn _this;\n\t}\n\n\t_createClass(PointAndFigureSeries, [{\n\t\tkey: \"drawOnCanvas\",\n\t\tvalue: function drawOnCanvas(ctx, moreProps) {\n\t\t\tvar xAccessor = moreProps.xAccessor;\n\t\t\tvar xScale = moreProps.xScale,\n\t\t\t    yScale = moreProps.chartConfig.yScale,\n\t\t\t    plotData = moreProps.plotData;\n\n\t\t\tvar columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\t\t_drawOnCanvas(ctx, this.props, columns);\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar clip = this.props.clip;\n\n\n\t\t\treturn _react2.default.createElement(_GenericChartComponent2.default, {\n\t\t\t\tclip: clip,\n\t\t\t\tsvgDraw: this.renderSVG,\n\t\t\t\tcanvasDraw: this.drawOnCanvas,\n\t\t\t\tcanvasToDraw: _GenericComponent.getAxisCanvas,\n\t\t\t\tdrawOn: [\"pan\"]\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: \"renderSVG\",\n\t\tvalue: function renderSVG(moreProps) {\n\t\t\tvar xAccessor = moreProps.xAccessor;\n\t\t\tvar xScale = moreProps.xScale,\n\t\t\t    yScale = moreProps.chartConfig.yScale,\n\t\t\t    plotData = moreProps.plotData;\n\t\t\tvar _props = this.props,\n\t\t\t    stroke = _props.stroke,\n\t\t\t    fill = _props.fill,\n\t\t\t    strokeWidth = _props.strokeWidth,\n\t\t\t    className = _props.className;\n\n\n\t\t\tvar columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t\"g\",\n\t\t\t\t{ className: className },\n\t\t\t\tcolumns.map(function (col, idx) {\n\t\t\t\t\treturn _react2.default.createElement(\n\t\t\t\t\t\t\"g\",\n\t\t\t\t\t\t{ key: idx, className: col.className, transform: \"translate(\" + col.offset[0] + \", \" + col.offset[1] + \")\" },\n\t\t\t\t\t\tcol.boxes.map(function (box, i) {\n\t\t\t\t\t\t\tif (col.direction > 0) {\n\t\t\t\t\t\t\t\treturn _react2.default.createElement(\n\t\t\t\t\t\t\t\t\t\"g\",\n\t\t\t\t\t\t\t\t\t{ key: idx + \"-\" + i },\n\t\t\t\t\t\t\t\t\t_react2.default.createElement(\"line\", { className: \"up\", strokeWidth: strokeWidth, stroke: stroke.up, fill: fill.up,\n\t\t\t\t\t\t\t\t\t\tx1: 0, y1: box.open, x2: box.columnWidth, y2: box.close }),\n\t\t\t\t\t\t\t\t\t_react2.default.createElement(\"line\", { className: \"up\", strokeWidth: strokeWidth, stroke: stroke.up, fill: fill.up,\n\t\t\t\t\t\t\t\t\t\tx1: 0, y1: box.close, x2: box.columnWidth, y2: box.open })\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn _react2.default.createElement(\"ellipse\", { key: idx + \"-\" + i,\n\t\t\t\t\t\t\t\tclassName: \"down\", strokeWidth: strokeWidth, stroke: stroke.down, fill: fill.down,\n\t\t\t\t\t\t\t\tcx: box.columnWidth / 2, cy: (box.open + box.close) / 2,\n\t\t\t\t\t\t\t\trx: box.columnWidth / 2, ry: box.boxHeight / 2 });\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn PointAndFigureSeries;\n}(_react.Component);\n\nPointAndFigureSeries.propTypes = {\n\tclassName: _propTypes2.default.string,\n\tstrokeWidth: _propTypes2.default.number.isRequired,\n\tstroke: _propTypes2.default.object.isRequired,\n\tfill: _propTypes2.default.object.isRequired,\n\tclip: _propTypes2.default.bool.isRequired\n};\n\nPointAndFigureSeries.defaultProps = {\n\tclassName: \"react-stockcharts-point-and-figure\",\n\tstrokeWidth: 1,\n\tstroke: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#FF0000\"\n\t},\n\tfill: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tclip: true\n};\n\nfunction _drawOnCanvas(ctx, props, columns) {\n\tvar stroke = props.stroke,\n\t    fill = props.fill,\n\t    strokeWidth = props.strokeWidth;\n\n\n\tctx.lineWidth = strokeWidth;\n\n\tcolumns.forEach(function (col) {\n\t\tvar _col$offset = _slicedToArray(col.offset, 2),\n\t\t    offsetX = _col$offset[0],\n\t\t    offsetY = _col$offset[1];\n\n\t\tcol.boxes.forEach(function (box) {\n\t\t\tif (col.direction > 0) {\n\t\t\t\tctx.fillStyle = fill.up;\n\t\t\t\tctx.strokeStyle = stroke.up;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = fill.down;\n\t\t\t\tctx.strokeStyle = stroke.down;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tvar x = offsetX + box.columnWidth / 2,\n\t\t\t\t    y = offsetY + box.open + box.boxHeight / 2;\n\t\t\t\tvar rx = box.columnWidth / 2,\n\t\t\t\t    ry = box.boxHeight / 2;\n\n\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t});\n\t});\n\n\tctx.stroke();\n}\n\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n\n\tvar width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n\n\tvar columnWidth = width / (plotData.length - 1);\n\n\tvar anyBox = void 0,\n\t    j = 0;\n\twhile ((0, _utils.isNotDefined)(anyBox)) {\n\t\tif ((0, _utils.isDefined)(plotData[j].close)) {\n\t\t\tanyBox = plotData[j].boxes[0];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\n\tvar boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n\n\tvar columns = plotData.filter(function (d) {\n\t\treturn (0, _utils.isDefined)(d.close);\n\t}).map(function (d) {\n\t\tvar boxes = d.boxes.map(function (box) {\n\t\t\treturn {\n\t\t\t\tcolumnWidth: columnWidth,\n\t\t\t\tboxHeight: boxHeight,\n\t\t\t\topen: yScale(box.open),\n\t\t\t\tclose: yScale(box.close)\n\t\t\t};\n\t\t});\n\n\t\tvar xOffset = xScale(xAccessor(d)) - columnWidth / 2;\n\t\treturn {\n\t\t\tboxes: boxes,\n\t\t\tdirection: d.direction,\n\t\t\toffset: [xOffset, 0]\n\t\t};\n\t});\n\treturn columns;\n}\n\nexports.default = PointAndFigureSeries;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/lib/series/PointAndFigureSeries.js"],"names":["PointAndFigureSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","columns","getColumns","clip","stroke","fill","strokeWidth","className","map","col","idx","offset","boxes","box","i","direction","up","open","columnWidth","close","down","boxHeight","propTypes","string","number","isRequired","object","bool","defaultProps","lineWidth","forEach","offsetX","offsetY","fillStyle","strokeStyle","beginPath","moveTo","lineTo","x","y","rx","ry","ellipse","Math","PI","width","length","anyBox","j","abs","filter","d","xOffset"],"mappings":"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","file":"PointAndFigureSeries.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass PointAndFigureSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\tdrawOnCanvas(ctx, this.props, columns);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { stroke, fill, strokeWidth, className } = this.props;\n\n\t\tconst columns = getColumns(xScale, xAccessor, yScale, plotData);\n\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{columns.map((col, idx) => (\n\t\t\t\t\t<g key={idx} className={col.className} transform={`translate(${ col.offset[0] }, ${ col.offset[1] })`}>\n\t\t\t\t\t\t{col.boxes.map((box, i) => {\n\t\t\t\t\t\t\tif (col.direction > 0) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<g key={`${ idx }-${ i }`}>\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.open} x2={box.columnWidth} y2={box.close} />\n\t\t\t\t\t\t\t\t\t\t<line className=\"up\" strokeWidth={strokeWidth} stroke={stroke.up} fill={fill.up}\n\t\t\t\t\t\t\t\t\t\t\tx1={0} y1={box.close} x2={box.columnWidth} y2={box.open} />\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ellipse key={`${ idx }-${ i }`}\n\t\t\t\t\t\t\t\t\tclassName=\"down\" strokeWidth={strokeWidth} stroke={stroke.down} fill={fill.down}\n\t\t\t\t\t\t\t\t\tcx={box.columnWidth / 2} cy={(box.open + box.close) / 2}\n\t\t\t\t\t\t\t\t\trx={box.columnWidth / 2} ry={box.boxHeight / 2} />\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</g>\n\t\t\t\t))}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nPointAndFigureSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.object.isRequired,\n\tfill: PropTypes.object.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nPointAndFigureSeries.defaultProps = {\n\tclassName: \"react-stockcharts-point-and-figure\",\n\tstrokeWidth: 1,\n\tstroke: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#FF0000\"\n\t},\n\tfill: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, props, columns) {\n\tconst { stroke, fill, strokeWidth } = props;\n\n\tctx.lineWidth = strokeWidth;\n\n\tcolumns.forEach(col => {\n\t\tconst [offsetX, offsetY] = col.offset;\n\t\tcol.boxes.forEach(box => {\n\t\t\tif (col.direction > 0) {\n\t\t\t\tctx.fillStyle = fill.up;\n\t\t\t\tctx.strokeStyle = stroke.up;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.open);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.close);\n\t\t\t\tctx.moveTo(offsetX, offsetY + box.close);\n\t\t\t\tctx.lineTo(offsetX + box.columnWidth, offsetY + box.open);\n\n\t\t\t\tctx.stroke();\n\t\t\t} else {\n\t\t\t\tctx.fillStyle = fill.down;\n\t\t\t\tctx.strokeStyle = stroke.down;\n\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tconst [x, y] = [offsetX + box.columnWidth / 2, offsetY + box.open + box.boxHeight / 2];\n\t\t\t\tconst [rx, ry] = [box.columnWidth / 2, box.boxHeight / 2];\n\n\t\t\t\tctx.ellipse(x, y, rx, ry, 0, 0, 2 * Math.PI);\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t});\n\t});\n\n\tctx.stroke();\n}\n\nfunction getColumns(xScale, xAccessor, yScale, plotData) {\n\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst columnWidth = (width / (plotData.length - 1));\n\n\tlet anyBox, j = 0;\n\twhile (isNotDefined(anyBox)) {\n\t\tif (isDefined(plotData[j].close)) {\n\t\t\tanyBox = plotData[j].boxes[0];\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\tj++;\n\t}\n\n\tconst boxHeight = Math.abs(yScale(anyBox.open) - yScale(anyBox.close));\n\n\tconst columns = plotData\n\t\t.filter(d => isDefined(d.close))\n\t\t.map(d => {\n\t\t\tconst boxes = d.boxes.map((box) => ({\n\t\t\t\tcolumnWidth: columnWidth,\n\t\t\t\tboxHeight: boxHeight,\n\t\t\t\topen: yScale(box.open),\n\t\t\t\tclose: yScale(box.close),\n\t\t\t}));\n\n\t\t\tconst xOffset = (xScale(xAccessor(d)) - (columnWidth / 2));\n\t\t\treturn {\n\t\t\t\tboxes: boxes,\n\t\t\t\tdirection: d.direction,\n\t\t\t\toffset: [xOffset, 0],\n\t\t\t};\n\t\t});\n\treturn columns;\n}\n\nexport default PointAndFigureSeries;\n"]}},"error":null,"hash":"d485a96730acd94a566e98f983282b5e","cacheData":{"env":{}}}