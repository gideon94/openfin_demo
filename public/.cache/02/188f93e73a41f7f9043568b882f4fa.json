{"id":"../node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","dependencies":[{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js.map","includedInParent":true,"mtime":1536032207000},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/package.json","includedInParent":true,"mtime":1602365273866},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/.babelrc","includedInParent":true,"mtime":1602365273866},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/package.json","includedInParent":true,"mtime":1602365360568},{"name":"react","loc":{"line":13,"column":21},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react/react.js"},{"name":"prop-types","loc":{"line":17,"column":25},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/prop-types/index.js"},{"name":"d3-format","loc":{"line":21,"column":24},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/d3-format/src/index.js"},{"name":"./displayValuesFor","loc":{"line":23,"column":32},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/displayValuesFor.js"},{"name":"../GenericChartComponent","loc":{"line":27,"column":37},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/GenericChartComponent.js"},{"name":"./ToolTipText","loc":{"line":31,"column":27},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/ToolTipText.js"},{"name":"./ToolTipTSpanLabel","loc":{"line":35,"column":33},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/ToolTipTSpanLabel.js"},{"name":"../utils","loc":{"line":39,"column":21},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/tooltip/MovingAverageTooltip.js","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/react-stockcharts/lib/utils/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SingleMAToolTip = function (_Component) {\n\t_inherits(SingleMAToolTip, _Component);\n\n\tfunction SingleMAToolTip(props) {\n\t\t_classCallCheck(this, SingleMAToolTip);\n\n\t\tvar _this = _possibleConstructorReturn(this, (SingleMAToolTip.__proto__ || Object.getPrototypeOf(SingleMAToolTip)).call(this, props));\n\n\t\t_this.handleClick = _this.handleClick.bind(_this);\n\t\treturn _this;\n\t}\n\n\t_createClass(SingleMAToolTip, [{\n\t\tkey: \"handleClick\",\n\t\tvalue: function handleClick(e) {\n\t\t\tvar _props = this.props,\n\t\t\t    onClick = _props.onClick,\n\t\t\t    forChart = _props.forChart,\n\t\t\t    options = _props.options;\n\n\t\t\tonClick(_extends({ chartId: forChart }, options), e);\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\tvar _props2 = this.props,\n\t\t\t    textFill = _props2.textFill,\n\t\t\t    labelFill = _props2.labelFill;\n\n\t\t\tvar translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t\"g\",\n\t\t\t\t{ transform: translate },\n\t\t\t\t_react2.default.createElement(\"line\", { x1: 0, y1: 2, x2: 0, y2: 28, stroke: this.props.color, strokeWidth: \"4px\" }),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t_ToolTipText2.default,\n\t\t\t\t\t{ x: 5, y: 11,\n\t\t\t\t\t\tfontFamily: this.props.fontFamily, fontSize: this.props.fontSize },\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t_ToolTipTSpanLabel2.default,\n\t\t\t\t\t\t{ fill: labelFill },\n\t\t\t\t\t\tthis.props.displayName\n\t\t\t\t\t),\n\t\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t\t\"tspan\",\n\t\t\t\t\t\t{ x: \"5\", dy: \"15\", fill: textFill },\n\t\t\t\t\t\tthis.props.value\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\t_react2.default.createElement(\"rect\", { x: 0, y: 0, width: 55, height: 30,\n\t\t\t\t\tonClick: this.handleClick,\n\t\t\t\t\tfill: \"none\", stroke: \"none\" })\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn SingleMAToolTip;\n}(_react.Component);\n\nSingleMAToolTip.propTypes = {\n\torigin: _propTypes2.default.array.isRequired,\n\tcolor: _propTypes2.default.string.isRequired,\n\tdisplayName: _propTypes2.default.string.isRequired,\n\tvalue: _propTypes2.default.string.isRequired,\n\tonClick: _propTypes2.default.func,\n\tfontFamily: _propTypes2.default.string,\n\ttextFill: _propTypes2.default.string,\n\tlabelFill: _propTypes2.default.string,\n\tfontSize: _propTypes2.default.number,\n\tforChart: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n\toptions: _propTypes2.default.object.isRequired\n};\n\nvar MovingAverageTooltip = function (_Component2) {\n\t_inherits(MovingAverageTooltip, _Component2);\n\n\tfunction MovingAverageTooltip(props) {\n\t\t_classCallCheck(this, MovingAverageTooltip);\n\n\t\tvar _this2 = _possibleConstructorReturn(this, (MovingAverageTooltip.__proto__ || Object.getPrototypeOf(MovingAverageTooltip)).call(this, props));\n\n\t\t_this2.renderSVG = _this2.renderSVG.bind(_this2);\n\t\treturn _this2;\n\t}\n\n\t_createClass(MovingAverageTooltip, [{\n\t\tkey: \"renderSVG\",\n\t\tvalue: function renderSVG(moreProps) {\n\t\t\tvar displayValuesFor = this.props.displayValuesFor;\n\t\t\tvar chartId = moreProps.chartId;\n\t\t\tvar chartConfig = moreProps.chartConfig;\n\t\t\tvar _props3 = this.props,\n\t\t\t    className = _props3.className,\n\t\t\t    onClick = _props3.onClick,\n\t\t\t    width = _props3.width,\n\t\t\t    fontFamily = _props3.fontFamily,\n\t\t\t    fontSize = _props3.fontSize,\n\t\t\t    textFill = _props3.textFill,\n\t\t\t    labelFill = _props3.labelFill;\n\t\t\tvar _props4 = this.props,\n\t\t\t    originProp = _props4.origin,\n\t\t\t    displayFormat = _props4.displayFormat,\n\t\t\t    options = _props4.options;\n\t\t\tvar height = moreProps.chartConfig.height;\n\n\n\t\t\tvar currentItem = displayValuesFor(this.props, moreProps);\n\t\t\tvar config = chartConfig;\n\n\t\t\tvar origin = (0, _utils.functor)(originProp);\n\n\t\t\tvar _origin = origin(width, height),\n\t\t\t    _origin2 = _slicedToArray(_origin, 2),\n\t\t\t    x = _origin2[0],\n\t\t\t    y = _origin2[1];\n\n\t\t\tvar _config$origin = _slicedToArray(config.origin, 2),\n\t\t\t    ox = _config$origin[0],\n\t\t\t    oy = _config$origin[1];\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t\"g\",\n\t\t\t\t{ transform: \"translate(\" + (ox + x) + \", \" + (oy + y) + \")\", className: className },\n\t\t\t\toptions.map(function (each, idx) {\n\t\t\t\t\tvar yValue = currentItem && each.yAccessor(currentItem);\n\n\t\t\t\t\tvar tooltipLabel = each.type + \" (\" + each.windowSize + \")\";\n\t\t\t\t\tvar yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\t\t\t\t\treturn _react2.default.createElement(SingleMAToolTip, {\n\t\t\t\t\t\tkey: idx,\n\t\t\t\t\t\torigin: [width * idx, 0],\n\t\t\t\t\t\tcolor: each.stroke,\n\t\t\t\t\t\tdisplayName: tooltipLabel,\n\t\t\t\t\t\tvalue: yDisplayValue,\n\t\t\t\t\t\toptions: each,\n\t\t\t\t\t\tforChart: chartId,\n\t\t\t\t\t\tonClick: onClick,\n\t\t\t\t\t\tfontFamily: fontFamily,\n\t\t\t\t\t\tfontSize: fontSize,\n\t\t\t\t\t\ttextFill: textFill,\n\t\t\t\t\t\tlabelFill: labelFill\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: \"render\",\n\t\tvalue: function render() {\n\t\t\treturn _react2.default.createElement(_GenericChartComponent2.default, {\n\t\t\t\tclip: false,\n\t\t\t\tsvgDraw: this.renderSVG,\n\t\t\t\tdrawOn: [\"mousemove\"]\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn MovingAverageTooltip;\n}(_react.Component);\n\nMovingAverageTooltip.propTypes = {\n\tclassName: _propTypes2.default.string,\n\tdisplayFormat: _propTypes2.default.func.isRequired,\n\torigin: _propTypes2.default.array.isRequired,\n\tdisplayValuesFor: _propTypes2.default.func,\n\tonClick: _propTypes2.default.func,\n\ttextFill: _propTypes2.default.string,\n\tlabelFill: _propTypes2.default.string,\n\tfontFamily: _propTypes2.default.string,\n\tfontSize: _propTypes2.default.number,\n\twidth: _propTypes2.default.number,\n\toptions: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t\tyAccessor: _propTypes2.default.func.isRequired,\n\t\ttype: _propTypes2.default.string.isRequired,\n\t\tstroke: _propTypes2.default.string.isRequired,\n\t\twindowSize: _propTypes2.default.number.isRequired,\n\t\techo: _propTypes2.default.any\n\t}))\n};\n\nMovingAverageTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n\tdisplayFormat: (0, _d3Format.format)(\".2f\"),\n\tdisplayValuesFor: _displayValuesFor2.default,\n\torigin: [0, 10],\n\twidth: 65\n};\n\nexports.default = MovingAverageTooltip;\n"},"sourceMaps":{"js":{"version":3,"sources":["../../../src/lib/tooltip/MovingAverageTooltip.js"],"names":["SingleMAToolTip","props","handleClick","bind","e","onClick","forChart","options","chartId","textFill","labelFill","translate","origin","color","fontFamily","fontSize","displayName","value","propTypes","array","isRequired","string","func","number","oneOfType","object","MovingAverageTooltip","renderSVG","moreProps","displayValuesFor","chartConfig","className","width","originProp","displayFormat","height","currentItem","config","x","y","ox","oy","map","each","idx","yValue","yAccessor","tooltipLabel","type","windowSize","yDisplayValue","stroke","arrayOf","shape","echo","any","defaultProps"],"mappings":"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","file":"MovingAverageTooltip.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nimport { functor } from \"../utils\";\n\nclass SingleMAToolTip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick(e) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick({ chartId: forChart, ...options }, e);\n\t}\n\trender() {\n\t\tconst { textFill, labelFill } = this.props;\n\t\tconst translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n\t\treturn (\n\t\t\t<g transform={translate}>\n\t\t\t\t<line x1={0} y1={2} x2={0} y2={28} stroke={this.props.color} strokeWidth=\"4px\"/>\n\t\t\t\t<ToolTipText x={5} y={11}\n\t\t\t\t\tfontFamily={this.props.fontFamily} fontSize={this.props.fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{this.props.displayName}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={textFill}>{this.props.value}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t\t<rect x={0} y={0} width={55} height={30}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tfill=\"none\" stroke=\"none\" />\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nSingleMAToolTip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tcolor: PropTypes.string.isRequired,\n\tdisplayName: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tforChart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\toptions: PropTypes.object.isRequired,\n};\n\nclass MovingAverageTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { displayValuesFor } = this.props;\n\n\t\tconst { chartId } = moreProps;\n\t\tconst { chartConfig } = moreProps;\n\n\t\tconst { className, onClick, width, fontFamily, fontSize, textFill, labelFill } = this.props;\n\t\tconst { origin: originProp, displayFormat, options } = this.props;\n\t\tconst { chartConfig: { height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst config = chartConfig;\n\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\t\tconst [ox, oy] = config.origin;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${ ox + x }, ${ oy + y })`} className={className}>\n\t\t\t\t{options\n\t\t\t\t\t.map((each, idx) => {\n\t\t\t\t\t\tconst yValue = currentItem && each.yAccessor(currentItem);\n\n\t\t\t\t\t\tconst tooltipLabel = `${each.type} (${each.windowSize})`;\n\t\t\t\t\t\tconst yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\t\t\t\t\t\treturn <SingleMAToolTip\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\torigin={[width * idx, 0]}\n\t\t\t\t\t\t\tcolor={each.stroke}\n\t\t\t\t\t\t\tdisplayName={tooltipLabel}\n\t\t\t\t\t\t\tvalue={yDisplayValue}\n\t\t\t\t\t\t\toptions={each}\n\t\t\t\t\t\t\tforChart={chartId}\n\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\ttextFill={textFill}\n\t\t\t\t\t\t\tlabelFill={labelFill}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nMovingAverageTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number,\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\ttype: PropTypes.string.isRequired,\n\t\tstroke: PropTypes.string.isRequired,\n\t\twindowSize: PropTypes.number.isRequired,\n\t\techo: PropTypes.any,\n\t})),\n};\n\nMovingAverageTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 10],\n\twidth: 65,\n};\n\nexport default MovingAverageTooltip;\n"]}},"error":null,"hash":"737361362568ae9003fd8819c5ae2e6c","cacheData":{"env":{}}}