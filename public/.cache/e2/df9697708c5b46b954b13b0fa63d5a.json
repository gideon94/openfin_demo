{"id":"src/redux/root.ts","dependencies":[{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/tsconfig.json","includedInParent":true,"mtime":1602365273870},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/.babelrc","includedInParent":true,"mtime":1602365273866},{"name":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/package.json","includedInParent":true,"mtime":1602365273866},{"name":"redux","loc":{"line":1,"column":23},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/root.ts","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/node_modules/redux/es/redux.js"},{"name":"./tiles","loc":{"line":2,"column":29},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/root.ts","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/tiles.ts"},{"name":"./blotter","loc":{"line":3,"column":31},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/root.ts","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/blotter.ts"},{"name":"./chart","loc":{"line":4,"column":29},"parent":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/root.ts","resolved":"/home/hemanth/Desktop/Itarle/OpenFinWithReactReduxParcel/public/src/redux/chart.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rootReducer = void 0;\n\nvar redux = _interopRequireWildcard(require(\"redux\"));\n\nvar _tiles = require(\"./tiles\");\n\nvar _blotter = require(\"./blotter\");\n\nvar _chart = require(\"./chart\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar rootReducer = redux.combineReducers({\n  tiles: _tiles.tilesReducer,\n  blotter: _blotter.blotterReducer,\n  chart: _chart.chartReducer\n});\nexports.rootReducer = rootReducer;"},"sourceMaps":{"js":{"mappings":[{"source":"src/redux/root.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":12,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":14,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":20,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":20,"column":4}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":24},"generated":{"line":20,"column":15}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":20,"column":18}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":32},"generated":{"line":20,"column":23}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":33},"generated":{"line":20,"column":24}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":20,"column":39}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":49},"generated":{"line":20,"column":40}},{"source":"src/redux/root.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":21,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":21,"column":2}},{"source":"src/redux/root.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":21,"column":7}},{"source":"src/redux/root.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":21,"column":9}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":49},"generated":{"line":21,"column":28}},{"source":"src/redux/root.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":22,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":22,"column":2}},{"source":"src/redux/root.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":22,"column":9}},{"source":"src/redux/root.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":22,"column":11}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":49},"generated":{"line":22,"column":34}},{"source":"src/redux/root.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":23,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":23,"column":2}},{"source":"src/redux/root.ts","name":null,"original":{"line":15,"column":9},"generated":{"line":23,"column":7}},{"source":"src/redux/root.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":23,"column":9}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":49},"generated":{"line":24,"column":0}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":27},"generated":{"line":24,"column":1}},{"source":"src/redux/root.ts","name":null,"original":{"line":12,"column":7},"generated":{"line":24,"column":2}}],"sources":{"src/redux/root.ts":"import * as redux from 'redux';\nimport { TilesInfoState, tilesReducer } from './tiles';\nimport { BlotterInfoState, blotterReducer } from './blotter';\nimport { ChartInfoState, chartReducer } from './chart';\n\nexport interface RootState {\n    tiles: TilesInfoState;\n    blotter: BlotterInfoState;\n    chart: ChartInfoState;\n}\n\nexport const rootReducer = redux.combineReducers({\n    tiles: tilesReducer,\n    blotter: blotterReducer,\n    chart: chartReducer\n});\n"},"lineCount":null}},"error":null,"hash":"cd15e3929160c7181c97d90f9ddee05b","cacheData":{"env":{}}}